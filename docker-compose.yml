version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: ./Dockerfile.app
    command: uvicorn src.api:app --host 0.0.0.0
    volumes:
      - ./data/astra:/astra/data
    ports:
      - "8000:8000"
    env_file:
      - app.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    restart: unless-stopped
    image: redis:alpine
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 5

  celery_worker:
    container_name: celery_worker
    build: 
      context: .
      dockerfile: ./Dockerfile.worker
    command: celery -A src.celery_worker.celery worker --loglevel=info
    volumes:
      - ./data/astra:/astra/data
    env_file:
      - worker.env
    depends_on:
      redis:
        condition: service_healthy

  flower:
    container_name: flower
    build: 
      context: .
      dockerfile: ./Dockerfile.app
    command: celery -A src.celery_worker.celery flower --port=5555 --persistent=True
    ports:
      - "5555:5555"
    volumes:
      - ./data/astra:/astra/data
    env_file:
      - app.env
    depends_on:
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: astra
      # POSTGRES_MULTIPLE_DATABASES: astra
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      - ./data/postgres/initdb:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

  pgadmin:
    image: chorss/docker-pgadmin4
    ports:
      - "5050:5050"
    